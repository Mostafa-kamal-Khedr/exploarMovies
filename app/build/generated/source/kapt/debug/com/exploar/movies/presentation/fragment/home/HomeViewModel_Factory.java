// Generated by Dagger (https://dagger.dev).
package com.exploar.movies.presentation.fragment.home;

import com.exploar.movies.domain.usecase.GetMovieGenreUseCase;
import com.exploar.movies.domain.usecase.GetTopRatedMoviesUseCase;
import com.exploar.movies.domain.usecase.SearchMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<GetTopRatedMoviesUseCase> getTopRatedMoviesUseCaseProvider;

  private final Provider<GetMovieGenreUseCase> getMovieGenreUseCaseProvider;

  private final Provider<SearchMoviesUseCase> searchMoviesUseCaseProvider;

  public HomeViewModel_Factory(Provider<GetTopRatedMoviesUseCase> getTopRatedMoviesUseCaseProvider,
      Provider<GetMovieGenreUseCase> getMovieGenreUseCaseProvider,
      Provider<SearchMoviesUseCase> searchMoviesUseCaseProvider) {
    this.getTopRatedMoviesUseCaseProvider = getTopRatedMoviesUseCaseProvider;
    this.getMovieGenreUseCaseProvider = getMovieGenreUseCaseProvider;
    this.searchMoviesUseCaseProvider = searchMoviesUseCaseProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(getTopRatedMoviesUseCaseProvider.get(), getMovieGenreUseCaseProvider.get(), searchMoviesUseCaseProvider.get());
  }

  public static HomeViewModel_Factory create(
      Provider<GetTopRatedMoviesUseCase> getTopRatedMoviesUseCaseProvider,
      Provider<GetMovieGenreUseCase> getMovieGenreUseCaseProvider,
      Provider<SearchMoviesUseCase> searchMoviesUseCaseProvider) {
    return new HomeViewModel_Factory(getTopRatedMoviesUseCaseProvider, getMovieGenreUseCaseProvider, searchMoviesUseCaseProvider);
  }

  public static HomeViewModel newInstance(GetTopRatedMoviesUseCase getTopRatedMoviesUseCase,
      GetMovieGenreUseCase getMovieGenreUseCase, SearchMoviesUseCase searchMoviesUseCase) {
    return new HomeViewModel(getTopRatedMoviesUseCase, getMovieGenreUseCase, searchMoviesUseCase);
  }
}
