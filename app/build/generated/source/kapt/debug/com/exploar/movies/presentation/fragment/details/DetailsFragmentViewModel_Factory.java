// Generated by Dagger (https://dagger.dev).
package com.exploar.movies.presentation.fragment.details;

import com.exploar.movies.domain.usecase.GetMovieImagesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailsFragmentViewModel_Factory implements Factory<DetailsFragmentViewModel> {
  private final Provider<GetMovieImagesUseCase> getMovieImagesUseCaseProvider;

  public DetailsFragmentViewModel_Factory(
      Provider<GetMovieImagesUseCase> getMovieImagesUseCaseProvider) {
    this.getMovieImagesUseCaseProvider = getMovieImagesUseCaseProvider;
  }

  @Override
  public DetailsFragmentViewModel get() {
    return newInstance(getMovieImagesUseCaseProvider.get());
  }

  public static DetailsFragmentViewModel_Factory create(
      Provider<GetMovieImagesUseCase> getMovieImagesUseCaseProvider) {
    return new DetailsFragmentViewModel_Factory(getMovieImagesUseCaseProvider);
  }

  public static DetailsFragmentViewModel newInstance(GetMovieImagesUseCase getMovieImagesUseCase) {
    return new DetailsFragmentViewModel(getMovieImagesUseCase);
  }
}
