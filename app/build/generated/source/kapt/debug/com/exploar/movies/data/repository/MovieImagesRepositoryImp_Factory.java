// Generated by Dagger (https://dagger.dev).
package com.exploar.movies.data.repository;

import com.exploar.movies.data.mapper.DataModelMapper;
import com.exploar.movies.data.remote.MoviesApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieImagesRepositoryImp_Factory implements Factory<MovieImagesRepositoryImp> {
  private final Provider<MoviesApi> apiProvider;

  private final Provider<DataModelMapper> movieImageMapperProvider;

  public MovieImagesRepositoryImp_Factory(Provider<MoviesApi> apiProvider,
      Provider<DataModelMapper> movieImageMapperProvider) {
    this.apiProvider = apiProvider;
    this.movieImageMapperProvider = movieImageMapperProvider;
  }

  @Override
  public MovieImagesRepositoryImp get() {
    return newInstance(apiProvider.get(), movieImageMapperProvider.get());
  }

  public static MovieImagesRepositoryImp_Factory create(Provider<MoviesApi> apiProvider,
      Provider<DataModelMapper> movieImageMapperProvider) {
    return new MovieImagesRepositoryImp_Factory(apiProvider, movieImageMapperProvider);
  }

  public static MovieImagesRepositoryImp newInstance(MoviesApi api,
      DataModelMapper movieImageMapper) {
    return new MovieImagesRepositoryImp(api, movieImageMapper);
  }
}
