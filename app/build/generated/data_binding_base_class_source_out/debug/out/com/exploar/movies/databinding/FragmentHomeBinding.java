// Generated by view binder compiler. Do not edit!
package com.exploar.movies.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.exploar.movies.R;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final ChipGroup movieGenreChips;

  @NonNull
  public final HorizontalScrollView movieGenreChipsContainer;

  @NonNull
  public final TextView noMoviesFilterHintText;

  @NonNull
  public final ConstraintLayout searchContainer;

  @NonNull
  public final EditText searchEditText;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final RecyclerView topMovieRecycler;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar loadingProgress, @NonNull ChipGroup movieGenreChips,
      @NonNull HorizontalScrollView movieGenreChipsContainer,
      @NonNull TextView noMoviesFilterHintText, @NonNull ConstraintLayout searchContainer,
      @NonNull EditText searchEditText, @NonNull ImageView searchIcon,
      @NonNull RecyclerView topMovieRecycler) {
    this.rootView = rootView;
    this.loadingProgress = loadingProgress;
    this.movieGenreChips = movieGenreChips;
    this.movieGenreChipsContainer = movieGenreChipsContainer;
    this.noMoviesFilterHintText = noMoviesFilterHintText;
    this.searchContainer = searchContainer;
    this.searchEditText = searchEditText;
    this.searchIcon = searchIcon;
    this.topMovieRecycler = topMovieRecycler;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loading_progress;
      ProgressBar loadingProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgress == null) {
        break missingId;
      }

      id = R.id.movie_genre_chips;
      ChipGroup movieGenreChips = ViewBindings.findChildViewById(rootView, id);
      if (movieGenreChips == null) {
        break missingId;
      }

      id = R.id.movie_genre_chips_container;
      HorizontalScrollView movieGenreChipsContainer = ViewBindings.findChildViewById(rootView, id);
      if (movieGenreChipsContainer == null) {
        break missingId;
      }

      id = R.id.no_movies_filter_hint_text;
      TextView noMoviesFilterHintText = ViewBindings.findChildViewById(rootView, id);
      if (noMoviesFilterHintText == null) {
        break missingId;
      }

      id = R.id.search_container;
      ConstraintLayout searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.search_edit_text;
      EditText searchEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchEditText == null) {
        break missingId;
      }

      id = R.id.search_icon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.top_movie_recycler;
      RecyclerView topMovieRecycler = ViewBindings.findChildViewById(rootView, id);
      if (topMovieRecycler == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, loadingProgress, movieGenreChips,
          movieGenreChipsContainer, noMoviesFilterHintText, searchContainer, searchEditText,
          searchIcon, topMovieRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
